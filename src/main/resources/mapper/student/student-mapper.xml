<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="student">
  <!-- <insert id="insertStudent" parameterType="com.kh.app.student.model.dto.Student">풀네임으로 적어줘야됨 -->
  <insert id="insertStudent" parameterType="student"><!-- config에서 별칭등록하기 -->
  	insert into student (no, name, tel) values (seq_student_no.nextval, #{name}, #{tel})
  </insert><!-- #{} = OGNL방식 -->
  
  <insert id="insertStudentMap" parameterType="map"><!-- 자주사용하는 클래스는 별칭이 등록되어있음. parameterType은 생략해도 작동함. 그냥 생략하기 -->
  	insert into student (no, name, tel) values (seq_student_no.nextval, #{name}, #{tel})
  </insert><!-- #{} = OGNL방식 -->
  
  <select id="getTotalCount" resultType="_int"><!-- select태그는resultType/resultMap속성 반드시 작성 -->
  	select count(*) from student where deleted_at is null
  </select>

  <select id="selectOneStudent" resultType="student"><!-- 원래 풀네임이지만 별칭등록 해줌 -->
  <!-- resultMap으로 매핑설정하기(자료형 Map아님) -->
 <!--  <select id="selectOneStudent" resultMap="studentDtoMap"> -->
  	select * 
  	from student 
  	where deleted_at is null 
  		and 
  		no = #{no}
  </select>
  
  <!-- 그냥 바로 student객체에 담아도 되지만 매핑하면 좀 더 다양한 기능을 사용할 수 있음 자료형 변경이라든가.. -->
  <!-- <resultMap type="student" id="studentDtoMap"> -->
  	<!-- column은 대소문자 구분없음. property는 대소문자 구분 pk는 id태그-->
  	<!-- <id column="no" property="no"/>
  	<result column="name" property="name"/>
  	<result column="tel" property="tel"/>
  	<result column="created_at" property="createdAt"/>
  	<result column="updated_at" property="updatedAt"/>
  	<result column="deleted_at" property="deletedAt"/> --><!-- 지금은 어차피 기본 내용이라 생략가능 -->
  <!-- </resultMap> -->
  
  
  <select id="selectOneStudentMap" resultMap="studentMap"><!-- resultType하면 map키값들이 컬럼명그대로 대문자 처리된거 반환됨 -->
  	select * 
  	from student 
  	where deleted_at is null 
  		and 
  		no = #{no}
  </select>
  <resultMap type="map" id="studentMap">
  	<id column="no" property="no"/>
  	<result column="name" property="name"/>
  	<result column="tel" property="tel"/>
  	<result column="created_at" property="createdAt"/>
  	<result column="updated_at" property="updatedAt"/>
  	<result column="deleted_at" property="deletedAt"/>
  </resultMap>
   
   <!-- list로 조회할때도 resultType은 한 행에 대응하는 자료형으로 작성 -->
  <select id="selectStudentList" resultType="student">
  	select *
  	from student
  	where deleted_at is null
  	order by no
  </select> 
   
   <select id="selectStudentMapList" resultMap="studentMap">
	   	select *
	  	from student
	  	where deleted_at is null
	  	order by no
   </select>
   
  <update id="updateStudent">
  	update student 
  	set name = #{name}, tel = #{tel}, updated_at = sysdate
  	where deleted_at is null and no = #{no}
  </update>
  
  <update id="deleteStudent">
	  update   student
	  set deleted_at = sysdate 
	  where no = #{no} 
  </update>
</mapper>